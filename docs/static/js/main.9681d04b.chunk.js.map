{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGripItem.js","components/GifGrip.js","hooks/useFetchGif.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setInputValue","handleSubmit","e","a","preventDefault","newCategory","document","querySelector","value","length","find","valor","myCategories","onSubmit","type","placeholder","onChange","target","getGif","category","url","encodeURI","fetch","respuesta","json","data","gif","map","img","id","title","images","downsized_medium","GifGripItem","className","src","alt","titulo","GifGrip","loading","state","setState","useEffect","getGifs","then","imgs","setTimeout","useFetchGif","imagenes","toUpperCase","Math","random","GifExpertApp","ReactDOM","render","getElementById"],"mappings":"0NAoCeA,EAjCK,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,WAAe,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAO1CC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACjBD,EAAEE,oBACIC,EAAcC,SAASC,cAAc,UAC5BC,MAAMC,OAAO,IAAMZ,EAAWa,MAAK,SAAAC,GAAK,OAAIA,IAAUN,EAAYG,SAHhE,gCAIPZ,GAAc,SAAAgB,GAAY,OAAKP,EAAYG,OAAjB,mBAA2BI,OAJ9C,OAMhBP,EAAYG,MAAQ,GANJ,2CAAH,sDASlB,OACI,sBAAMK,SAAUZ,EAAhB,SACI,uBACIa,KAAK,OACLC,YAAY,cACZP,MAAOT,EACPiB,SAnBc,SAACd,GACvBF,EAAcE,EAAEe,OAAOT,aCOhBU,EAdF,uCAAG,WAAOC,GAAP,uBAAAhB,EAAA,6DACNiB,EADM,0DACmDC,UAAUF,GAD7D,sDAEYG,MAAMF,GAFlB,cAENG,EAFM,gBAGSA,EAAUC,OAHnB,uBAGLC,EAHK,EAGLA,KACDC,EAAMD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAR9B,kBAWLM,GAXK,4CAAH,sDCEAO,EAAc,SAAC,GAAW,IAAVL,EAAS,EAATA,IACzB,OACI,qBAAkBM,UAAU,YAA5B,SACI,qBAAkBC,IAAKP,EAAIR,IAAKgB,IAAKR,EAAIS,QAA/BT,EAAIC,KADRD,EAAIC,KCATS,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDb,SAACA,GAAc,IAAD,EACXrB,mBAAS,CAC/B2B,KAAK,GACLc,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAiBrC,OAXAC,qBAAU,WACNC,EAAQxB,GACHyB,MAAK,SAAAC,GACFC,YAAW,WACPL,EAAS,CACLhB,KAAMoB,EACNN,SAAS,MAEd,UAEb,CAACpB,IACIqB,EDf0BO,CAAY5B,GAAjC6B,EADwB,EAC7BvB,KAAec,EADc,EACdA,QAEtB,OACI,qCACI,6BAAKpB,EAAS8B,gBACbV,GAAW,8CACZ,qBAAKL,UAAU,OAAf,SAEQc,EAASrB,KAAI,SAAAC,GACL,OACI,cAAC,EAAD,CAAiCA,IAAKA,GAApBsB,KAAKC,mBEWxCC,EAtBM,WAAO,IAAD,EACatD,mBAAS,CACzC,UAFmB,mBAChBD,EADgB,KACJD,EADI,KAKvB,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAiBA,EAAeC,WAAcA,IAC3D,uBACA,6BACGA,EAAW8B,KAAI,SAAAR,GACZ,OAAQ,cAAC,EAAD,CACJA,SAAUA,GACLA,Y,MCbzBkC,IAASC,OACP,cAAC,EAAD,IACAhD,SAASiD,eAAe,W","file":"static/js/main.9681d04b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories, categories})=> {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        const newCategory = document.querySelector('input');\r\n        if(newCategory.value.length>0 && !categories.find(valor => valor === newCategory.value)){\r\n            await setCategories(myCategories =>[ newCategory.value, ...myCategories]);           \r\n         }\r\n         newCategory.value = \"\"\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"BÃºsqueda\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n} \r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n    categories: PropTypes.array.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n"," const getGif = async (category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=12&q=${encodeURI(category)}&api_key=9nh9gUaGYIGL1KI6ogB963BZJ1iWR6gS`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n    const gif = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    }); \r\n    return gif;\r\n} \r\n\r\nexport default getGif","import React from 'react'\r\n\r\nexport const GifGripItem = ({img}) => {\r\n    return (\r\n        <div key={img.id} className=\"item-caja\">\r\n            <img key={img.id} src={img.url} alt={img.titulo}/>   \r\n        </div>  \r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGif'; \r\nimport { GifGripItem } from './GifGripItem';\r\n\r\nexport const GifGrip =  ({category}) => { \r\n    const {data:imagenes, loading} = useFetchGif(category); \r\n    \r\n    return (\r\n        <>\r\n            <h3>{category.toUpperCase()}</h3> \r\n            {loading && <span>Loading...</span>}\r\n            <div className=\"caja\"> \r\n                {\r\n                    imagenes.map(img =>{\r\n                            return (\r\n                                <GifGripItem key={Math.random()} img={img} />  \r\n                            );\r\n                    })\r\n                }\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport getGifs from '../helpers/getGifs'; \r\n\r\nexport const useFetchGif = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs =>{\r\n                setTimeout(()=>{\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                }, 3000);\r\n            });\r\n    },[category]); \r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport AddCategory from './AddCategory';\r\nimport { GifGrip } from './GifGrip';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([\r\n        'gatos' \r\n    ]);\r\n\r\n    return (\r\n        <>\r\n          <h1>GifExpertApp</h1>\r\n          <AddCategory setCategories = {setCategories} categories = {categories}/>\r\n          <hr/> \r\n          <ul>\r\n            {categories.map(category=>{\r\n                return (<GifGrip \r\n                    category={category}\r\n                    key={category}\r\n                />);\r\n            })}\r\n          </ul>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './style/index.css';  \n\nReactDOM.render(  \n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n "],"sourceRoot":""}